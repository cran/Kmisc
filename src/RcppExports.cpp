// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// split_runs_numeric
List split_runs_numeric(NumericVector X);
RcppExport SEXP Kmisc_split_runs_numeric(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericVector X = Rcpp::as<NumericVector >(XSEXP);
    List __result = split_runs_numeric(X);
    return Rcpp::wrap(__result);
END_RCPP
}
// split_runs_character
List split_runs_character(std::vector< std::string > X);
RcppExport SEXP Kmisc_split_runs_character(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    std::vector< std::string > X = Rcpp::as<std::vector< std::string > >(XSEXP);
    List __result = split_runs_character(X);
    return Rcpp::wrap(__result);
END_RCPP
}
// split_runs_one
List split_runs_one(std::string x);
RcppExport SEXP Kmisc_split_runs_one(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    std::string x = Rcpp::as<std::string >(xSEXP);
    List __result = split_runs_one(x);
    return Rcpp::wrap(__result);
END_RCPP
}
// stack_list_df
List stack_list_df(List& X, std::vector< std::string > classes, int num_elem, bool make_row_names, std::string name, bool keep_list_index, std::string index_name);
RcppExport SEXP Kmisc_stack_list_df(SEXP XSEXP, SEXP classesSEXP, SEXP num_elemSEXP, SEXP make_row_namesSEXP, SEXP nameSEXP, SEXP keep_list_indexSEXP, SEXP index_nameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    List X = Rcpp::as<List >(XSEXP);
    std::vector< std::string > classes = Rcpp::as<std::vector< std::string > >(classesSEXP);
    int num_elem = Rcpp::as<int >(num_elemSEXP);
    bool make_row_names = Rcpp::as<bool >(make_row_namesSEXP);
    std::string name = Rcpp::as<std::string >(nameSEXP);
    bool keep_list_index = Rcpp::as<bool >(keep_list_indexSEXP);
    std::string index_name = Rcpp::as<std::string >(index_nameSEXP);
    List __result = stack_list_df(X, classes, num_elem, make_row_names, name, keep_list_index, index_name);
    return Rcpp::wrap(__result);
END_RCPP
}
